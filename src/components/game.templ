package components

import (
	"code-root/src/assets"
	"code-root/src/game"
	"code-root/src/eventlog"
)

templ Game(gameState game.GameState, assets assets.Assets, events eventlog.FighterEventLog) {
	<div id="game">
		<div id="FighterSides" class="flex flex-row align-center justify-center">
			<div 
				id="LeftFighterSide" 
				class="flex flex-row h-screen w-6/12 align-evenly justify-evenly bg-gradient-to-t from-red-200 to-indigo-200 text-white text-center"
			>
				@FighterStats(gameState.LeftFighter)
				@FighterIcon(gameState.LeftFighter,true,assets)
			</div>
			<div 
				id="RightFighterSide" 
				class="flex flex-row h-screen w-6/12 align-evenly justify-evenly bg-gradient-to-t from-yellow-200 to-blue-200 text-white text-center"
			>
				@FighterIcon(gameState.RightFighter,false,assets)
				@FighterStats(gameState.RightFighter)
			</div>
		</div>
		@EventLog(events)
	</div>
}

templ FighterStats(f game.Fighter) {
	<div id={"FighterInner" + f.Name} class="flex flex-col align-center justify-center w-3/12 h-6/12 bg-gray-400 mt-40 border border-4 border-black">
		<div>
			{ f.Name }
		</div>
		<div>
			Health: { f.Health }
		</div>
		<div>
			Damage: { f.Damage }
		</div>
		<div>
			Speed { f.Speed }
		</div>
		<div>
			Timer: { f.Timer } / { game.DEFAULT_TIMER }
		</div>
		<div>
			Accuracy: { f.Accuracy * 100 }% 
		</div>
		<div>
			Crit: { f.CritRate * 100 }% 
		</div>
	</div>
}

templ FighterIcon(fighter game.Fighter, left bool, assets assets.Assets) {
	{{
		var animationName string

		wounded := fighter.Health <= fighter.MaxHealth / 2
		var defaultAnim string = "bounce"
		if wounded {
			defaultAnim = "wounded"
		}

		var dir string = "left"
		if !left {
			dir = "right"
		}
		switch fighter.State {
			case game.READY:
				animationName = "animate-" + defaultAnim
			case game.ATTACKING:
				animationName = "animate-attack-" + dir
			case game.CRITTING:
				animationName = "animate-crit-" + dir
			case game.DEFENDING:
				animationName = "animate-defend-" + dir
			default:
				animationName = "animate-" + defaultAnim
		}
	}}
		<div 
			class={animationName + " mt-62"} 
		>
			@templ.Raw(assets.IconsSvgs[fighter.Name])
		</div>
}

templ EventLog(f eventlog.FighterEventLog) {
	<ul
		id="LogList"
		class="fixed flex flex-col-reverse align-center justify-center bg-blue-300 left-4/12 bottom-1/12 w-4/12 h-2/12 border-10 border-color-black overflow-y-scroll overflow-x-auto"
	>
		for _, item := range f.Log {
			@EventInner(item)
		}
	</ul>
}

templ EventInner(text string) {
	<li 
	>
		{text}
	</li>
}
